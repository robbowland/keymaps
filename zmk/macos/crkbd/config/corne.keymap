#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Aliases
#define LOWER &mo 1
#define RAISE &mo 2
#define MEH &kp LC(LS(LALT))
// Macros
#define AS(keycode) &as LS(keycode) keycode  // auto-shift
#define SPC_ENTR &mt RETURN SPACE            // tap = space, hold = enter

/ {
    behaviors {
      as: auto_shift {
        compatible = "zmk,behavior-hold-tap";
        #binding-cells = <2>;
        tapping_term_ms = <200>;
        quick_tap_ms = <0>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
      };
    };

    keymap {
      compatible = "zmk,keymap";
      base_layer {
        // -----------------------------------------------------------------------------------------
        // |  TAB |  Q  |  W  |  E  |  R  |  T  |       |  Y  |  U   |  I  |  O  |  P  | BSPC |
        // |   `  |  A  |  S  |  D  |  F  |  G  |       |  H  |  J   |  K  |  L  |  ;  |  '   |
        // | SHFT |  Z  |  X  |  C  |  V  |  B  |       |  N  |  M   |  ,  |  .  |  /  | CTRL |
        //                    | CMD | LWR | ␣/⏎ |       | ␣/⏎ | RSE  | ALT |
        bindings = <
          &kp TAB   AS(Q) AS(W) AS(E) AS(R) AS(T)       AS(Y) AS(U) AS(I)     AS(O)   AS(P)    &kp BSPC
          AS(GRAVE) AS(A) AS(S) AS(D) AS(F) AS(G)       AS(H) AS(J) AS(K)     AS(L)   AS(SEMI) AS(SQT)
          &kp LSHFT AS(Z) AS(X) AS(C) AS(V) AS(B)       AS(N) AS(M) AS(COMMA) AS(DOT) AS(FSLH) &kp RCTRL
                         &kp LGUI  LOWER  SPC_ENTR    SPC_ENTR  RAISE  &kp RALT
        >;
      };
      lower_layer {
        // -----------------------------------------------------------------------------------------
        // |  ESC |  ×  |  ×  |  ×  |  ×  |  ×  |       |  ×  |  ×  |  ×  |  ×  |  ×  | BSPC |
        // |   `  |  1  |  2  |  3  |  4  |  5  |       |  6  |  7  |  8  |  9  |  0  |  \   |
        // | SHFT |  ×  |  ×  |  ×  |  ×  |  ×  |       |  ×  |  -  |  =  |  [  |  ]  | CTRL |
        //                    | CMD |  ×  | ␣/⏎ |       | ␣/⏎ |  ×  | ALT |
        bindings = <
          &kp ESC   &none  &none  &none  &none  &none         &none  &none     &none     &none    &none    &kp BSPC
          AS(GRAVE) AS(N1) AS(N2) AS(N3) AS(N4) AS(N5)        AS(N6) AS(N7)    AS(N8)    AS(N9)   AS(N0)   AS(BSLH)
          &kp LSHFT &none  &none  &none  &none  &none         &none  AS(MINUS) AS(EQUAL) AS(LBKT) AS(RBKT) &kp RCTRL
                                 &kp LGUI &none SPC_ENTR    SPC_ENTR  &none  &kp RALT
        >;
      };
      raise_layer {
        // -----------------------------------------------------------------------------------------
        // |  ESC |  ×  |  ×  |  ×  |  ×  |  ×  |       |  ×  |  ×  |  ×  |  ×  |  ×  |  ×   |
        // |  MEH |  ×  |  ×  |  ×  |  ×  |  ×  |       |  ←  |  ↓  |  ↑  |  →  |  ×  |  ×   | 
        // | SHFT |  ×  |  ×  |  ×  |  ×  |  ×  |       |  ×  |  ×  |  ×  |  ×  |  ×  | CTRL |
        //                    | GUI |  ×  | ␣/⏎ |       | ␣/⏎ |  ×  | ALT |
        bindings = <
          &kp ESC    &none  &none  &none  &none  &none         &none     &none     &none   &none      &none  &kp BSPC
          MEH        &none  &none  &none  &none  &none         &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none  &none
          &kp LSHFT  &none  &none  &none  &none  &none         &none     &none     &none   &none      &none  &kp RCTRL
                                &kp LGUI  &none  SPC_ENTR   SPC_ENTR  &none  &kp RALT
        >;
      };
    };
};
